"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_detailViewModal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/detailViewModal */ \"./components/detailViewModal.js\");\n/* harmony import */ var _components_EmbedMapButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/EmbedMapButton */ \"./components/EmbedMapButton.js\");\n/* harmony import */ var _components_ShareButton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/ShareButton */ \"./components/ShareButton.js\");\n/* harmony import */ var _components_ClubsTable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/ClubsTable */ \"./components/ClubsTable.js\");\n/* harmony import */ var _components_SearchControls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/SearchControls */ \"./components/SearchControls.js\");\n/* harmony import */ var _components_DirectoryHeading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/DirectoryHeading */ \"./components/DirectoryHeading.js\");\n/* harmony import */ var _components_DirectoryVideoSection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/DirectoryVideoSection */ \"./components/DirectoryVideoSection.js\");\n/* harmony import */ var _components_ClubPreview__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/ClubPreview */ \"./components/ClubPreview.js\");\n/* harmony import */ var _components_TableLabel__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/TableLabel */ \"./components/TableLabel.js\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! theme-ui */ \"./node_modules/theme-ui/dist/theme-ui.esm.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _hackclub_meta__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @hackclub/meta */ \"./node_modules/@hackclub/meta/dist/index.esm.js\");\n/* harmony import */ var _components_nav__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../components/nav */ \"./components/nav.js\");\n/* harmony import */ var _components_force_theme__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../components/force-theme */ \"./components/force-theme.js\");\n/* harmony import */ var _components_footer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../components/footer */ \"./components/footer.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var underscore_string__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! underscore.string */ \"./node_modules/underscore.string/index.js\");\n/* harmony import */ var underscore_string__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(underscore_string__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var react_modal__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react-modal */ \"./node_modules/react-modal/lib/index.js\");\n/* harmony import */ var react_modal__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react_modal__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _hackclub_icons__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @hackclub/icons */ \"./node_modules/@hackclub/icons/dist/index.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var csv__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! csv */ \"./node_modules/csv/lib/index.js\");\n/* harmony import */ var json2csv__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! json2csv */ \"./node_modules/json2csv/lib/json2csv.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//Considering toast for success messages\nfunction toggleBodyScroll(disable) {\n    if (true) {\n        if (disable) {\n            document.body.classList.add(\"modal-open\");\n        } else {\n            document.body.classList.remove(\"modal-open\");\n        }\n    }\n}\nconst continents = [\n    \"Asia\",\n    \"North America\",\n    \"Europe\",\n    \"South America\",\n    \"Africa\",\n    \"Australia/Oceania\",\n    \"Antarctica\"\n];\nfunction NetworkPage() {\n    _s();\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)(true);\n    function downloadCSV() {\n        const fields = [\n            \"Name\",\n            \"Leader Names\",\n            \"Venue\",\n            \"Location\",\n            \"Leader Emails\"\n        ];\n        const data = selectedClubs.map((id)=>{\n            const club = clubs.find((c)=>c.id === id);\n            return {\n                Name: club.name,\n                \"Leader Names\": club.leaders.map((leader)=>leader.name).join(\", \"),\n                Venue: club.venue,\n                Location: club.location,\n                \"Leader Emails\": club.leaders.map((leader)=>leader.email).join(\", \")\n            };\n        });\n        const csv = (0,json2csv__WEBPACK_IMPORTED_MODULE_20__.parse)(data, {\n            fields\n        });\n        const blob = new Blob([\n            csv\n        ], {\n            type: \"text/csv;charset=utf-8;\"\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", \"selected-clubs.csv\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n    function getClubById(id) {\n        const club = clubs.find((c)=>c.id === id);\n        return club;\n    }\n    const [clubs, setClubs] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)([]);\n    const [clubOpened, setClubOpened] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)(null);\n    const urlFriendlyName = (clubOpened === null || clubOpened === void 0 ? void 0 : clubOpened.name) ? clubOpened.name.replace(/\\s+/g, \"_\").toLowerCase() : \"\";\n    const navigator =  true ? window.navigator : 0;\n    (0,react__WEBPACK_IMPORTED_MODULE_14__.useEffect)(()=>{\n        fetch(\"https://clubsdirectory-hc.up.railway.app/clubs\").then((response)=>response.json()).then((data)=>{\n            setClubs(data);\n            setIsLoading(false);\n        }).catch((error)=>console.error(error));\n        toggleBodyScroll(clubOpened != null);\n    }, [\n        clubOpened\n    ]);\n    function sortByYouth(a, b) {\n        if (a.startDate > b.startDate) {\n            return -1;\n        }\n        if (a.startDate < b.startDate) {\n            return 1;\n        }\n        return 0;\n    }\n    function sortByAge(a, b) {\n        if (a.startDate < b.startDate) {\n            return -1;\n        }\n        if (a.startDate > b.startDate) {\n            return 1;\n        }\n        return 0;\n    }\n    function sortByAlphabetic(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        } else if (a.name > b.name) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    function getClubEmailById(id) {\n        const club = clubs.find((c)=>c.id === id);\n        return club ? club.leaders.map((leader)=>leader.email).join(\", \") : \"\";\n    }\n    ;\n    function sortByRelevancy(a, b, searchContent) {\n        const aWords = a.name.toLowerCase().split(\" \").filter((word)=>word != \" \");\n        const bWords = b.name.toLowerCase().split(\" \").filter((word)=>word != \" \");\n        const searchWords = searchContent.toLowerCase().split(\" \").filter((word)=>word != \" \");\n        // Calculate the Levenshtein distance between each input name and the search content\n        let aDistance = 0;\n        searchWords.forEach((targetWord)=>{\n            let minDistance = Infinity;\n            aWords.forEach((word)=>{\n                // Calculate the Levenshtein distance between the target word and the input word\n                const distance = (0,underscore_string__WEBPACK_IMPORTED_MODULE_15__.levenshtein)(targetWord, word);\n                // If the distance is smaller than the minimum distance so far, update the minimum distance\n                if (distance < minDistance) {\n                    minDistance = distance;\n                }\n            });\n            // Add the minimum distance to the distance for this item\n            aDistance += minDistance;\n        });\n        let bDistance = 0;\n        searchWords.forEach((targetWord)=>{\n            let minDistance = Infinity;\n            bWords.forEach((word)=>{\n                // Calculate the Levenshtein distance between the target word and the input word\n                const distance = (0,underscore_string__WEBPACK_IMPORTED_MODULE_15__.levenshtein)(targetWord, word);\n                // If the distance is smaller than the minimum distance so far, update the minimum distance\n                if (distance < minDistance) {\n                    minDistance = distance;\n                }\n            });\n            // Add the minimum distance to the distance for this item\n            bDistance += minDistance;\n        });\n        // Sort the items based on the difference between their distances\n        return aDistance - bDistance;\n    }\n    const [selectedClubs, setSelectedClubs] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)([]);\n    const [selectedContinent, setSelectedContinent] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)(\"\");\n    const [searchContent, setSearchContent] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)(\"\");\n    const [filter, setFilter] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)(\"Relevancy\");\n    const [view, setView] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)(\"List\");\n    const [recentlyCopied, setRecentlyCopied] = (0,react__WEBPACK_IMPORTED_MODULE_14__.useState)(\"\");\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hackclub_meta__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n                as: (next_head__WEBPACK_IMPORTED_MODULE_10___default()),\n                title: \"Hack Clubs Directory\",\n                description: \"The Clubs Directory unlocks the power of cross-club collaboration, allowing clubs to transcend boundaries and create together.\",\n                //Need to add an image here\n                image: \"https://cloud-dq1e294hq-hack-club-bot.vercel.app/0screenshot_2023-04-29_at_3.17.40_pm.png\"\n            }, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 192,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_emotion_react__WEBPACK_IMPORTED_MODULE_22__.Global, {\n                styles: {\n                    body: {\n                        overflow: clubOpened ? \"hidden\" : \"visible\",\n                        width: clubOpened ? \"100%\" : \"auto\",\n                        lineHeight: 1.25\n                    }\n                }\n            }, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 200,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_force_theme__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                theme: \"light\"\n            }, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 209,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_23__.Container, {\n                sx: {\n                    position: \"fixed\",\n                    bottom: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-start\",\n                    maxWidth: \"container\"\n                },\n                children: selectedClubs.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n                    sx: {\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        backgroundColor: \"sunken\"\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                            sx: {\n                                p: 0,\n                                mx: 0,\n                                my: 0\n                            },\n                            children: [\n                                selectedClubs.length,\n                                \" Club\",\n                                selectedClubs.length > 1 ? \"s\" : null,\n                                \" Selected\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                            lineNumber: 214,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_23__.Button, {\n                                    variant: \"primary\",\n                                    sx: {\n                                        mt: 2,\n                                        mb: 0,\n                                        mr: 2\n                                    },\n                                    onClick: ()=>{\n                                        const clubNames = selectedClubs.map((id)=>getClubEmailById(id)).join(\", \");\n                                        setRecentlyCopied(clubNames);\n                                        navigator.clipboard.writeText(clubNames);\n                                    },\n                                    children: recentlyCopied === selectedClubs.map((id)=>getClubEmailById(id)).join(\", \") ? \"Copied!\" : \"Copy Emails\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                                    lineNumber: 227,\n                                    columnNumber: 11\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_23__.Button, {\n                                    variant: \"primary\",\n                                    sx: {\n                                        mt: 2,\n                                        mb: 0\n                                    },\n                                    onClick: ()=>{\n                                        downloadCSV();\n                                    },\n                                    children: \"Download CSV\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                                    lineNumber: 238,\n                                    columnNumber: 11\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                            lineNumber: 226,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                    lineNumber: 213,\n                    columnNumber: 9\n                }, this) : null\n            }, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 210,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {}, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 254,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_nav__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 259,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_DirectoryVideoSection__WEBPACK_IMPORTED_MODULE_7__.DirectoryVideoSection, {}, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 260,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_DirectoryHeading__WEBPACK_IMPORTED_MODULE_6__.DirectoryHeading, {}, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 261,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchControls__WEBPACK_IMPORTED_MODULE_5__.SearchControls, {\n                searchContent: searchContent,\n                setSearchContent: setSearchContent,\n                console: console,\n                levenshtein: underscore_string__WEBPACK_IMPORTED_MODULE_15__.levenshtein,\n                filter: filter,\n                setFilter: setFilter,\n                view: view,\n                setView: setView,\n                selectedContinent: selectedContinent,\n                setSelectedContinent: setSelectedContinent,\n                continents: continents,\n                Badge: theme_ui__WEBPACK_IMPORTED_MODULE_23__.Badge\n            }, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 262,\n                columnNumber: 5\n            }, this),\n            view == \"\",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ClubsTable__WEBPACK_IMPORTED_MODULE_4__.ClubsTable, {\n                isLoading: isLoading,\n                setSelectedClubs: setSelectedClubs,\n                selectedClubs: selectedClubs,\n                clubs: clubs,\n                filterResults: filterResults,\n                sortResults: sortResults,\n                setClubOpened: setClubOpened,\n                setRecentlyCopied: setRecentlyCopied,\n                navigator: navigator,\n                recentlyCopied: recentlyCopied\n            }, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 264,\n                columnNumber: 5\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_footer__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/thomasstubblefield/Developer/clubsdirectory/site/pages/index.js\",\n                lineNumber: 266,\n                columnNumber: 5\n            }, this)\n        ]\n    }, void 0, true);\n    function sortResults(a, b) {\n        if (filter == \"Relevancy\") {\n            return sortByRelevancy(a, b, searchContent);\n        } else if (filter == \"Alphabetic\") {\n            return sortByAlphabetic(a, b);\n        } else if (filter == \"Latest\") {\n            return sortByYouth(a, b);\n        } else if (filter == \"Oldest\") {\n            return sortByAge(a, b);\n        }\n    }\n    function filterResults(club) {\n        var _club_geo_data;\n        return (selectedContinent == \"\" || selectedContinent == (club === null || club === void 0 ? void 0 : (_club_geo_data = club.geo_data) === null || _club_geo_data === void 0 ? void 0 : _club_geo_data.continent)) && (club.name.toLowerCase().includes(searchContent.toLowerCase()) || club.name.toLowerCase().split(\" \").some((word)=>searchContent.split(\" \").some((searchTerm)=>(0,underscore_string__WEBPACK_IMPORTED_MODULE_15__.levenshtein)(word.toLowerCase(), searchTerm.toLowerCase()) < 2)) || club.venue.toLowerCase().includes(searchContent.toLowerCase()) || club.location.toLowerCase().includes(searchContent.toLowerCase()) || club.leaders.some((leader)=>leader.name.toLowerCase().includes(searchContent.toLowerCase())));\n    }\n}\n_s(NetworkPage, \"etZamgPI2FEpcoCJ+em1RKWiF+I=\");\n_c = NetworkPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (NetworkPage);\nvar _c;\n$RefreshReg$(_c, \"NetworkPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ })

});